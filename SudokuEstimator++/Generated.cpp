// File generated by Python script, do not modify
#include "Generated.h"

// Method for updating the constraint at cell (i, j), associated with 'value' when SETTING the value
inline bool update_constraint_set(int domain_sizes[], int constraints[], int i, int j, int value) {
    int index = i + j * 16;

    // If there were previously no constraints on this value, now there is one.
    // This means the domain size of the cell at (i, j) has shrunk by 1
    domain_sizes[index] -= !( constraints[index * 16 + value]++ ); 

    return domain_sizes[index] != 0;
}

// Method for updating the constraint at cell (i, j), associated with 'value' when RESETTING the value
inline void update_constraint_reset(int domain_sizes[], int constraints[], int i, int j, int value) {
    int index = i + j * 16;

    // If there was previously a constraint on this value, now there are none.
    // This means the domain size of the cell at (i, j) has increased by 1
    domain_sizes[index] += !( --constraints[index * 16 + value] );
}

bool Generated::update_domains_set_0_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);

	return valid;
}

void Generated::update_domains_reset_0_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
}

bool Generated::update_domains_set_1_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);

	return valid;
}

void Generated::update_domains_reset_1_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
}

bool Generated::update_domains_set_2_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);

	return valid;
}

void Generated::update_domains_reset_2_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
}

bool Generated::update_domains_set_3_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);

	return valid;
}

void Generated::update_domains_reset_3_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
}

bool Generated::update_domains_set_4_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);

	return valid;
}

void Generated::update_domains_reset_4_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
}

bool Generated::update_domains_set_5_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);

	return valid;
}

void Generated::update_domains_reset_5_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
}

bool Generated::update_domains_set_6_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);

	return valid;
}

void Generated::update_domains_reset_6_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
}

bool Generated::update_domains_set_7_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);

	return valid;
}

void Generated::update_domains_reset_7_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
}

bool Generated::update_domains_set_8_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);

	return valid;
}

void Generated::update_domains_reset_8_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
}

bool Generated::update_domains_set_9_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);

	return valid;
}

void Generated::update_domains_reset_9_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
}

bool Generated::update_domains_set_10_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);

	return valid;
}

void Generated::update_domains_reset_10_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
}

bool Generated::update_domains_set_11_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);

	return valid;
}

void Generated::update_domains_reset_11_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
}

bool Generated::update_domains_set_12_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	return valid;
}

void Generated::update_domains_reset_12_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
}

bool Generated::update_domains_set_13_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	return valid;
}

void Generated::update_domains_reset_13_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
}

bool Generated::update_domains_set_14_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	return valid;
}

void Generated::update_domains_reset_14_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 15, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
}

bool Generated::update_domains_set_15_0(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 0, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 0, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);

	return valid;
}

void Generated::update_domains_reset_15_0(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 0, value);
	update_constraint_reset(domain_sizes, constraints, 1, 0, value);
	update_constraint_reset(domain_sizes, constraints, 2, 0, value);
	update_constraint_reset(domain_sizes, constraints, 3, 0, value);
	update_constraint_reset(domain_sizes, constraints, 4, 0, value);
	update_constraint_reset(domain_sizes, constraints, 5, 0, value);
	update_constraint_reset(domain_sizes, constraints, 6, 0, value);
	update_constraint_reset(domain_sizes, constraints, 7, 0, value);
	update_constraint_reset(domain_sizes, constraints, 8, 0, value);
	update_constraint_reset(domain_sizes, constraints, 9, 0, value);
	update_constraint_reset(domain_sizes, constraints, 10, 0, value);
	update_constraint_reset(domain_sizes, constraints, 11, 0, value);
	update_constraint_reset(domain_sizes, constraints, 12, 0, value);
	update_constraint_reset(domain_sizes, constraints, 13, 0, value);
	update_constraint_reset(domain_sizes, constraints, 14, 0, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
}

bool Generated::update_domains_set_0_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);

	return valid;
}

void Generated::update_domains_reset_0_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
}

bool Generated::update_domains_set_1_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);

	return valid;
}

void Generated::update_domains_reset_1_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
}

bool Generated::update_domains_set_2_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);

	return valid;
}

void Generated::update_domains_reset_2_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
}

bool Generated::update_domains_set_3_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);

	return valid;
}

void Generated::update_domains_reset_3_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
}

bool Generated::update_domains_set_4_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);

	return valid;
}

void Generated::update_domains_reset_4_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
}

bool Generated::update_domains_set_5_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);

	return valid;
}

void Generated::update_domains_reset_5_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
}

bool Generated::update_domains_set_6_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);

	return valid;
}

void Generated::update_domains_reset_6_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
}

bool Generated::update_domains_set_7_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);

	return valid;
}

void Generated::update_domains_reset_7_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
}

bool Generated::update_domains_set_8_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);

	return valid;
}

void Generated::update_domains_reset_8_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
}

bool Generated::update_domains_set_9_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);

	return valid;
}

void Generated::update_domains_reset_9_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
}

bool Generated::update_domains_set_10_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);

	return valid;
}

void Generated::update_domains_reset_10_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
}

bool Generated::update_domains_set_11_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);

	return valid;
}

void Generated::update_domains_reset_11_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
}

bool Generated::update_domains_set_12_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	return valid;
}

void Generated::update_domains_reset_12_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
}

bool Generated::update_domains_set_13_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	return valid;
}

void Generated::update_domains_reset_13_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
}

bool Generated::update_domains_set_14_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	return valid;
}

void Generated::update_domains_reset_14_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
}

bool Generated::update_domains_set_15_1(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);

	return valid;
}

void Generated::update_domains_reset_15_1(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
}

bool Generated::update_domains_set_0_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);

	return valid;
}

void Generated::update_domains_reset_0_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
}

bool Generated::update_domains_set_1_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);

	return valid;
}

void Generated::update_domains_reset_1_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
}

bool Generated::update_domains_set_2_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);

	return valid;
}

void Generated::update_domains_reset_2_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
}

bool Generated::update_domains_set_3_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);

	return valid;
}

void Generated::update_domains_reset_3_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
}

bool Generated::update_domains_set_4_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);

	return valid;
}

void Generated::update_domains_reset_4_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
}

bool Generated::update_domains_set_5_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);

	return valid;
}

void Generated::update_domains_reset_5_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
}

bool Generated::update_domains_set_6_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);

	return valid;
}

void Generated::update_domains_reset_6_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
}

bool Generated::update_domains_set_7_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);

	return valid;
}

void Generated::update_domains_reset_7_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
}

bool Generated::update_domains_set_8_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);

	return valid;
}

void Generated::update_domains_reset_8_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
}

bool Generated::update_domains_set_9_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);

	return valid;
}

void Generated::update_domains_reset_9_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
}

bool Generated::update_domains_set_10_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);

	return valid;
}

void Generated::update_domains_reset_10_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
}

bool Generated::update_domains_set_11_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);

	return valid;
}

void Generated::update_domains_reset_11_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
}

bool Generated::update_domains_set_12_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	return valid;
}

void Generated::update_domains_reset_12_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
}

bool Generated::update_domains_set_13_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	return valid;
}

void Generated::update_domains_reset_13_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
}

bool Generated::update_domains_set_14_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	return valid;
}

void Generated::update_domains_reset_14_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
}

bool Generated::update_domains_set_15_2(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);

	return valid;
}

void Generated::update_domains_reset_15_2(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
}

bool Generated::update_domains_set_0_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);

	return valid;
}

void Generated::update_domains_reset_0_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
}

bool Generated::update_domains_set_1_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);

	return valid;
}

void Generated::update_domains_reset_1_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
}

bool Generated::update_domains_set_2_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);

	return valid;
}

void Generated::update_domains_reset_2_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
}

bool Generated::update_domains_set_3_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);

	return valid;
}

void Generated::update_domains_reset_3_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
}

bool Generated::update_domains_set_4_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);

	return valid;
}

void Generated::update_domains_reset_4_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
}

bool Generated::update_domains_set_5_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);

	return valid;
}

void Generated::update_domains_reset_5_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
}

bool Generated::update_domains_set_6_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);

	return valid;
}

void Generated::update_domains_reset_6_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
}

bool Generated::update_domains_set_7_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);

	return valid;
}

void Generated::update_domains_reset_7_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
}

bool Generated::update_domains_set_8_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);

	return valid;
}

void Generated::update_domains_reset_8_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
}

bool Generated::update_domains_set_9_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);

	return valid;
}

void Generated::update_domains_reset_9_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
}

bool Generated::update_domains_set_10_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);

	return valid;
}

void Generated::update_domains_reset_10_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
}

bool Generated::update_domains_set_11_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);

	return valid;
}

void Generated::update_domains_reset_11_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
}

bool Generated::update_domains_set_12_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	return valid;
}

void Generated::update_domains_reset_12_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
}

bool Generated::update_domains_set_13_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	return valid;
}

void Generated::update_domains_reset_13_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
}

bool Generated::update_domains_set_14_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);

	return valid;
}

void Generated::update_domains_reset_14_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
}

bool Generated::update_domains_set_15_3(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);

	return valid;
}

void Generated::update_domains_reset_15_3(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
}

bool Generated::update_domains_set_0_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);

	return valid;
}

void Generated::update_domains_reset_0_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
}

bool Generated::update_domains_set_1_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);

	return valid;
}

void Generated::update_domains_reset_1_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
}

bool Generated::update_domains_set_2_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);

	return valid;
}

void Generated::update_domains_reset_2_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
}

bool Generated::update_domains_set_3_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);

	return valid;
}

void Generated::update_domains_reset_3_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
}

bool Generated::update_domains_set_4_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);

	return valid;
}

void Generated::update_domains_reset_4_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
}

bool Generated::update_domains_set_5_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);

	return valid;
}

void Generated::update_domains_reset_5_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
}

bool Generated::update_domains_set_6_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);

	return valid;
}

void Generated::update_domains_reset_6_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
}

bool Generated::update_domains_set_7_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);

	return valid;
}

void Generated::update_domains_reset_7_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
}

bool Generated::update_domains_set_8_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);

	return valid;
}

void Generated::update_domains_reset_8_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
}

bool Generated::update_domains_set_9_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);

	return valid;
}

void Generated::update_domains_reset_9_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
}

bool Generated::update_domains_set_10_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);

	return valid;
}

void Generated::update_domains_reset_10_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
}

bool Generated::update_domains_set_11_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);

	return valid;
}

void Generated::update_domains_reset_11_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
}

bool Generated::update_domains_set_12_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	return valid;
}

void Generated::update_domains_reset_12_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
}

bool Generated::update_domains_set_13_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	return valid;
}

void Generated::update_domains_reset_13_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
}

bool Generated::update_domains_set_14_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	return valid;
}

void Generated::update_domains_reset_14_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 15, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
}

bool Generated::update_domains_set_15_4(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 4, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 4, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);

	return valid;
}

void Generated::update_domains_reset_15_4(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 4, value);
	update_constraint_reset(domain_sizes, constraints, 1, 4, value);
	update_constraint_reset(domain_sizes, constraints, 2, 4, value);
	update_constraint_reset(domain_sizes, constraints, 3, 4, value);
	update_constraint_reset(domain_sizes, constraints, 4, 4, value);
	update_constraint_reset(domain_sizes, constraints, 5, 4, value);
	update_constraint_reset(domain_sizes, constraints, 6, 4, value);
	update_constraint_reset(domain_sizes, constraints, 7, 4, value);
	update_constraint_reset(domain_sizes, constraints, 8, 4, value);
	update_constraint_reset(domain_sizes, constraints, 9, 4, value);
	update_constraint_reset(domain_sizes, constraints, 10, 4, value);
	update_constraint_reset(domain_sizes, constraints, 11, 4, value);
	update_constraint_reset(domain_sizes, constraints, 12, 4, value);
	update_constraint_reset(domain_sizes, constraints, 13, 4, value);
	update_constraint_reset(domain_sizes, constraints, 14, 4, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
}

bool Generated::update_domains_set_0_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);

	return valid;
}

void Generated::update_domains_reset_0_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
}

bool Generated::update_domains_set_1_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);

	return valid;
}

void Generated::update_domains_reset_1_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
}

bool Generated::update_domains_set_2_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);

	return valid;
}

void Generated::update_domains_reset_2_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
}

bool Generated::update_domains_set_3_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);

	return valid;
}

void Generated::update_domains_reset_3_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
}

bool Generated::update_domains_set_4_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);

	return valid;
}

void Generated::update_domains_reset_4_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
}

bool Generated::update_domains_set_5_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);

	return valid;
}

void Generated::update_domains_reset_5_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
}

bool Generated::update_domains_set_6_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);

	return valid;
}

void Generated::update_domains_reset_6_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
}

bool Generated::update_domains_set_7_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);

	return valid;
}

void Generated::update_domains_reset_7_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
}

bool Generated::update_domains_set_8_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);

	return valid;
}

void Generated::update_domains_reset_8_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
}

bool Generated::update_domains_set_9_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);

	return valid;
}

void Generated::update_domains_reset_9_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
}

bool Generated::update_domains_set_10_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);

	return valid;
}

void Generated::update_domains_reset_10_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
}

bool Generated::update_domains_set_11_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);

	return valid;
}

void Generated::update_domains_reset_11_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
}

bool Generated::update_domains_set_12_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	return valid;
}

void Generated::update_domains_reset_12_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
}

bool Generated::update_domains_set_13_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	return valid;
}

void Generated::update_domains_reset_13_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
}

bool Generated::update_domains_set_14_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	return valid;
}

void Generated::update_domains_reset_14_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
}

bool Generated::update_domains_set_15_5(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);

	return valid;
}

void Generated::update_domains_reset_15_5(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
}

bool Generated::update_domains_set_0_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);

	return valid;
}

void Generated::update_domains_reset_0_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
}

bool Generated::update_domains_set_1_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);

	return valid;
}

void Generated::update_domains_reset_1_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
}

bool Generated::update_domains_set_2_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);

	return valid;
}

void Generated::update_domains_reset_2_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
}

bool Generated::update_domains_set_3_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);

	return valid;
}

void Generated::update_domains_reset_3_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
}

bool Generated::update_domains_set_4_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);

	return valid;
}

void Generated::update_domains_reset_4_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
}

bool Generated::update_domains_set_5_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);

	return valid;
}

void Generated::update_domains_reset_5_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
}

bool Generated::update_domains_set_6_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);

	return valid;
}

void Generated::update_domains_reset_6_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
}

bool Generated::update_domains_set_7_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);

	return valid;
}

void Generated::update_domains_reset_7_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
}

bool Generated::update_domains_set_8_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);

	return valid;
}

void Generated::update_domains_reset_8_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
}

bool Generated::update_domains_set_9_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);

	return valid;
}

void Generated::update_domains_reset_9_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
}

bool Generated::update_domains_set_10_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);

	return valid;
}

void Generated::update_domains_reset_10_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
}

bool Generated::update_domains_set_11_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);

	return valid;
}

void Generated::update_domains_reset_11_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
}

bool Generated::update_domains_set_12_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	return valid;
}

void Generated::update_domains_reset_12_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
}

bool Generated::update_domains_set_13_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	return valid;
}

void Generated::update_domains_reset_13_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
}

bool Generated::update_domains_set_14_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	return valid;
}

void Generated::update_domains_reset_14_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
}

bool Generated::update_domains_set_15_6(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);

	return valid;
}

void Generated::update_domains_reset_15_6(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
}

bool Generated::update_domains_set_0_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);

	return valid;
}

void Generated::update_domains_reset_0_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
}

bool Generated::update_domains_set_1_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);

	return valid;
}

void Generated::update_domains_reset_1_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
}

bool Generated::update_domains_set_2_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);

	return valid;
}

void Generated::update_domains_reset_2_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
}

bool Generated::update_domains_set_3_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);

	return valid;
}

void Generated::update_domains_reset_3_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
}

bool Generated::update_domains_set_4_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);

	return valid;
}

void Generated::update_domains_reset_4_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
}

bool Generated::update_domains_set_5_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);

	return valid;
}

void Generated::update_domains_reset_5_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
}

bool Generated::update_domains_set_6_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);

	return valid;
}

void Generated::update_domains_reset_6_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
}

bool Generated::update_domains_set_7_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);

	return valid;
}

void Generated::update_domains_reset_7_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
}

bool Generated::update_domains_set_8_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);

	return valid;
}

void Generated::update_domains_reset_8_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
}

bool Generated::update_domains_set_9_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);

	return valid;
}

void Generated::update_domains_reset_9_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
}

bool Generated::update_domains_set_10_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);

	return valid;
}

void Generated::update_domains_reset_10_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
}

bool Generated::update_domains_set_11_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);

	return valid;
}

void Generated::update_domains_reset_11_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
}

bool Generated::update_domains_set_12_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	return valid;
}

void Generated::update_domains_reset_12_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
}

bool Generated::update_domains_set_13_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	return valid;
}

void Generated::update_domains_reset_13_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
}

bool Generated::update_domains_set_14_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);

	return valid;
}

void Generated::update_domains_reset_14_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
}

bool Generated::update_domains_set_15_7(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);

	return valid;
}

void Generated::update_domains_reset_15_7(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
}

bool Generated::update_domains_set_0_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);

	return valid;
}

void Generated::update_domains_reset_0_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
}

bool Generated::update_domains_set_1_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);

	return valid;
}

void Generated::update_domains_reset_1_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
}

bool Generated::update_domains_set_2_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);

	return valid;
}

void Generated::update_domains_reset_2_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
}

bool Generated::update_domains_set_3_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);

	return valid;
}

void Generated::update_domains_reset_3_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
}

bool Generated::update_domains_set_4_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);

	return valid;
}

void Generated::update_domains_reset_4_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
}

bool Generated::update_domains_set_5_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);

	return valid;
}

void Generated::update_domains_reset_5_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
}

bool Generated::update_domains_set_6_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);

	return valid;
}

void Generated::update_domains_reset_6_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
}

bool Generated::update_domains_set_7_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);

	return valid;
}

void Generated::update_domains_reset_7_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
}

bool Generated::update_domains_set_8_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);

	return valid;
}

void Generated::update_domains_reset_8_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
}

bool Generated::update_domains_set_9_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);

	return valid;
}

void Generated::update_domains_reset_9_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
}

bool Generated::update_domains_set_10_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);

	return valid;
}

void Generated::update_domains_reset_10_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
}

bool Generated::update_domains_set_11_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);

	return valid;
}

void Generated::update_domains_reset_11_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
}

bool Generated::update_domains_set_12_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	return valid;
}

void Generated::update_domains_reset_12_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
}

bool Generated::update_domains_set_13_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	return valid;
}

void Generated::update_domains_reset_13_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
}

bool Generated::update_domains_set_14_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	return valid;
}

void Generated::update_domains_reset_14_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 15, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
}

bool Generated::update_domains_set_15_8(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 8, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 8, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);

	return valid;
}

void Generated::update_domains_reset_15_8(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 8, value);
	update_constraint_reset(domain_sizes, constraints, 1, 8, value);
	update_constraint_reset(domain_sizes, constraints, 2, 8, value);
	update_constraint_reset(domain_sizes, constraints, 3, 8, value);
	update_constraint_reset(domain_sizes, constraints, 4, 8, value);
	update_constraint_reset(domain_sizes, constraints, 5, 8, value);
	update_constraint_reset(domain_sizes, constraints, 6, 8, value);
	update_constraint_reset(domain_sizes, constraints, 7, 8, value);
	update_constraint_reset(domain_sizes, constraints, 8, 8, value);
	update_constraint_reset(domain_sizes, constraints, 9, 8, value);
	update_constraint_reset(domain_sizes, constraints, 10, 8, value);
	update_constraint_reset(domain_sizes, constraints, 11, 8, value);
	update_constraint_reset(domain_sizes, constraints, 12, 8, value);
	update_constraint_reset(domain_sizes, constraints, 13, 8, value);
	update_constraint_reset(domain_sizes, constraints, 14, 8, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
}

bool Generated::update_domains_set_0_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);

	return valid;
}

void Generated::update_domains_reset_0_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
}

bool Generated::update_domains_set_1_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);

	return valid;
}

void Generated::update_domains_reset_1_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
}

bool Generated::update_domains_set_2_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);

	return valid;
}

void Generated::update_domains_reset_2_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
}

bool Generated::update_domains_set_3_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);

	return valid;
}

void Generated::update_domains_reset_3_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
}

bool Generated::update_domains_set_4_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);

	return valid;
}

void Generated::update_domains_reset_4_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
}

bool Generated::update_domains_set_5_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);

	return valid;
}

void Generated::update_domains_reset_5_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
}

bool Generated::update_domains_set_6_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);

	return valid;
}

void Generated::update_domains_reset_6_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
}

bool Generated::update_domains_set_7_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);

	return valid;
}

void Generated::update_domains_reset_7_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
}

bool Generated::update_domains_set_8_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);

	return valid;
}

void Generated::update_domains_reset_8_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
}

bool Generated::update_domains_set_9_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);

	return valid;
}

void Generated::update_domains_reset_9_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
}

bool Generated::update_domains_set_10_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);

	return valid;
}

void Generated::update_domains_reset_10_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
}

bool Generated::update_domains_set_11_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);

	return valid;
}

void Generated::update_domains_reset_11_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
}

bool Generated::update_domains_set_12_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	return valid;
}

void Generated::update_domains_reset_12_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
}

bool Generated::update_domains_set_13_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	return valid;
}

void Generated::update_domains_reset_13_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
}

bool Generated::update_domains_set_14_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	return valid;
}

void Generated::update_domains_reset_14_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
}

bool Generated::update_domains_set_15_9(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);

	return valid;
}

void Generated::update_domains_reset_15_9(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
}

bool Generated::update_domains_set_0_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);

	return valid;
}

void Generated::update_domains_reset_0_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
}

bool Generated::update_domains_set_1_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);

	return valid;
}

void Generated::update_domains_reset_1_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
}

bool Generated::update_domains_set_2_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);

	return valid;
}

void Generated::update_domains_reset_2_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
}

bool Generated::update_domains_set_3_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);

	return valid;
}

void Generated::update_domains_reset_3_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
}

bool Generated::update_domains_set_4_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);

	return valid;
}

void Generated::update_domains_reset_4_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
}

bool Generated::update_domains_set_5_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);

	return valid;
}

void Generated::update_domains_reset_5_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
}

bool Generated::update_domains_set_6_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);

	return valid;
}

void Generated::update_domains_reset_6_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
}

bool Generated::update_domains_set_7_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);

	return valid;
}

void Generated::update_domains_reset_7_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
}

bool Generated::update_domains_set_8_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);

	return valid;
}

void Generated::update_domains_reset_8_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
}

bool Generated::update_domains_set_9_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);

	return valid;
}

void Generated::update_domains_reset_9_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
}

bool Generated::update_domains_set_10_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);

	return valid;
}

void Generated::update_domains_reset_10_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
}

bool Generated::update_domains_set_11_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);

	return valid;
}

void Generated::update_domains_reset_11_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
}

bool Generated::update_domains_set_12_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	return valid;
}

void Generated::update_domains_reset_12_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
}

bool Generated::update_domains_set_13_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	return valid;
}

void Generated::update_domains_reset_13_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
}

bool Generated::update_domains_set_14_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	return valid;
}

void Generated::update_domains_reset_14_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
}

bool Generated::update_domains_set_15_10(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);

	return valid;
}

void Generated::update_domains_reset_15_10(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
}

bool Generated::update_domains_set_0_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);

	return valid;
}

void Generated::update_domains_reset_0_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
}

bool Generated::update_domains_set_1_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);

	return valid;
}

void Generated::update_domains_reset_1_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
}

bool Generated::update_domains_set_2_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);

	return valid;
}

void Generated::update_domains_reset_2_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
}

bool Generated::update_domains_set_3_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);

	return valid;
}

void Generated::update_domains_reset_3_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
}

bool Generated::update_domains_set_4_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);

	return valid;
}

void Generated::update_domains_reset_4_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
}

bool Generated::update_domains_set_5_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);

	return valid;
}

void Generated::update_domains_reset_5_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
}

bool Generated::update_domains_set_6_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);

	return valid;
}

void Generated::update_domains_reset_6_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
}

bool Generated::update_domains_set_7_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);

	return valid;
}

void Generated::update_domains_reset_7_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
}

bool Generated::update_domains_set_8_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);

	return valid;
}

void Generated::update_domains_reset_8_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
}

bool Generated::update_domains_set_9_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);

	return valid;
}

void Generated::update_domains_reset_9_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
}

bool Generated::update_domains_set_10_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);

	return valid;
}

void Generated::update_domains_reset_10_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
}

bool Generated::update_domains_set_11_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);

	return valid;
}

void Generated::update_domains_reset_11_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
}

bool Generated::update_domains_set_12_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	return valid;
}

void Generated::update_domains_reset_12_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
}

bool Generated::update_domains_set_13_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	return valid;
}

void Generated::update_domains_reset_13_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
}

bool Generated::update_domains_set_14_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);

	return valid;
}

void Generated::update_domains_reset_14_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
}

bool Generated::update_domains_set_15_11(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);

	return valid;
}

void Generated::update_domains_reset_15_11(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
}

bool Generated::update_domains_set_0_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	return valid;
}

void Generated::update_domains_reset_0_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
}

bool Generated::update_domains_set_1_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	return valid;
}

void Generated::update_domains_reset_1_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
}

bool Generated::update_domains_set_2_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	return valid;
}

void Generated::update_domains_reset_2_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
}

bool Generated::update_domains_set_3_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	return valid;
}

void Generated::update_domains_reset_3_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
}

bool Generated::update_domains_set_4_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	return valid;
}

void Generated::update_domains_reset_4_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
}

bool Generated::update_domains_set_5_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	return valid;
}

void Generated::update_domains_reset_5_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
}

bool Generated::update_domains_set_6_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	return valid;
}

void Generated::update_domains_reset_6_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
}

bool Generated::update_domains_set_7_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	return valid;
}

void Generated::update_domains_reset_7_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
}

bool Generated::update_domains_set_8_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	return valid;
}

void Generated::update_domains_reset_8_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
}

bool Generated::update_domains_set_9_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	return valid;
}

void Generated::update_domains_reset_9_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
}

bool Generated::update_domains_set_10_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	return valid;
}

void Generated::update_domains_reset_10_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
}

bool Generated::update_domains_set_11_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	return valid;
}

void Generated::update_domains_reset_11_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
}

bool Generated::update_domains_set_12_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	return valid;
}

void Generated::update_domains_reset_12_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);
}

bool Generated::update_domains_set_13_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	return valid;
}

void Generated::update_domains_reset_13_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);
}

bool Generated::update_domains_set_14_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	return valid;
}

void Generated::update_domains_reset_14_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 15, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);
}

bool Generated::update_domains_set_15_12(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 12, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 12, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	return valid;
}

void Generated::update_domains_reset_15_12(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 12, value);
	update_constraint_reset(domain_sizes, constraints, 1, 12, value);
	update_constraint_reset(domain_sizes, constraints, 2, 12, value);
	update_constraint_reset(domain_sizes, constraints, 3, 12, value);
	update_constraint_reset(domain_sizes, constraints, 4, 12, value);
	update_constraint_reset(domain_sizes, constraints, 5, 12, value);
	update_constraint_reset(domain_sizes, constraints, 6, 12, value);
	update_constraint_reset(domain_sizes, constraints, 7, 12, value);
	update_constraint_reset(domain_sizes, constraints, 8, 12, value);
	update_constraint_reset(domain_sizes, constraints, 9, 12, value);
	update_constraint_reset(domain_sizes, constraints, 10, 12, value);
	update_constraint_reset(domain_sizes, constraints, 11, 12, value);
	update_constraint_reset(domain_sizes, constraints, 12, 12, value);
	update_constraint_reset(domain_sizes, constraints, 13, 12, value);
	update_constraint_reset(domain_sizes, constraints, 14, 12, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
}

bool Generated::update_domains_set_0_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	return valid;
}

void Generated::update_domains_reset_0_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
}

bool Generated::update_domains_set_1_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	return valid;
}

void Generated::update_domains_reset_1_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
}

bool Generated::update_domains_set_2_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	return valid;
}

void Generated::update_domains_reset_2_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
}

bool Generated::update_domains_set_3_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	return valid;
}

void Generated::update_domains_reset_3_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
}

bool Generated::update_domains_set_4_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	return valid;
}

void Generated::update_domains_reset_4_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
}

bool Generated::update_domains_set_5_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	return valid;
}

void Generated::update_domains_reset_5_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
}

bool Generated::update_domains_set_6_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	return valid;
}

void Generated::update_domains_reset_6_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
}

bool Generated::update_domains_set_7_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	return valid;
}

void Generated::update_domains_reset_7_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
}

bool Generated::update_domains_set_8_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	return valid;
}

void Generated::update_domains_reset_8_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
}

bool Generated::update_domains_set_9_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	return valid;
}

void Generated::update_domains_reset_9_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
}

bool Generated::update_domains_set_10_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	return valid;
}

void Generated::update_domains_reset_10_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
}

bool Generated::update_domains_set_11_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	return valid;
}

void Generated::update_domains_reset_11_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
}

bool Generated::update_domains_set_12_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	return valid;
}

void Generated::update_domains_reset_12_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);
}

bool Generated::update_domains_set_13_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	return valid;
}

void Generated::update_domains_reset_13_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);
}

bool Generated::update_domains_set_14_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	return valid;
}

void Generated::update_domains_reset_14_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);
}

bool Generated::update_domains_set_15_13(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	return valid;
}

void Generated::update_domains_reset_15_13(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
}

bool Generated::update_domains_set_0_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	return valid;
}

void Generated::update_domains_reset_0_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
}

bool Generated::update_domains_set_1_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	return valid;
}

void Generated::update_domains_reset_1_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
}

bool Generated::update_domains_set_2_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	return valid;
}

void Generated::update_domains_reset_2_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
}

bool Generated::update_domains_set_3_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);

	return valid;
}

void Generated::update_domains_reset_3_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
}

bool Generated::update_domains_set_4_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	return valid;
}

void Generated::update_domains_reset_4_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
}

bool Generated::update_domains_set_5_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	return valid;
}

void Generated::update_domains_reset_5_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
}

bool Generated::update_domains_set_6_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	return valid;
}

void Generated::update_domains_reset_6_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
}

bool Generated::update_domains_set_7_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);

	return valid;
}

void Generated::update_domains_reset_7_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
}

bool Generated::update_domains_set_8_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	return valid;
}

void Generated::update_domains_reset_8_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
}

bool Generated::update_domains_set_9_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	return valid;
}

void Generated::update_domains_reset_9_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
}

bool Generated::update_domains_set_10_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	return valid;
}

void Generated::update_domains_reset_10_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
}

bool Generated::update_domains_set_11_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);

	return valid;
}

void Generated::update_domains_reset_11_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
}

bool Generated::update_domains_set_12_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	return valid;
}

void Generated::update_domains_reset_12_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);
}

bool Generated::update_domains_set_13_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	return valid;
}

void Generated::update_domains_reset_13_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);
}

bool Generated::update_domains_set_14_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	return valid;
}

void Generated::update_domains_reset_14_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);
}

bool Generated::update_domains_set_15_14(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	return valid;
}

void Generated::update_domains_reset_15_14(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
}

bool Generated::update_domains_set_0_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 0, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);

	return valid;
}

void Generated::update_domains_reset_0_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 0, 1, value);
	update_constraint_reset(domain_sizes, constraints, 0, 2, value);
	update_constraint_reset(domain_sizes, constraints, 0, 3, value);
	update_constraint_reset(domain_sizes, constraints, 0, 5, value);
	update_constraint_reset(domain_sizes, constraints, 0, 6, value);
	update_constraint_reset(domain_sizes, constraints, 0, 7, value);
	update_constraint_reset(domain_sizes, constraints, 0, 9, value);
	update_constraint_reset(domain_sizes, constraints, 0, 10, value);
	update_constraint_reset(domain_sizes, constraints, 0, 11, value);
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
}

bool Generated::update_domains_set_1_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 1, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);

	return valid;
}

void Generated::update_domains_reset_1_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 1, 1, value);
	update_constraint_reset(domain_sizes, constraints, 1, 2, value);
	update_constraint_reset(domain_sizes, constraints, 1, 3, value);
	update_constraint_reset(domain_sizes, constraints, 1, 5, value);
	update_constraint_reset(domain_sizes, constraints, 1, 6, value);
	update_constraint_reset(domain_sizes, constraints, 1, 7, value);
	update_constraint_reset(domain_sizes, constraints, 1, 9, value);
	update_constraint_reset(domain_sizes, constraints, 1, 10, value);
	update_constraint_reset(domain_sizes, constraints, 1, 11, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
}

bool Generated::update_domains_set_2_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 2, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);

	return valid;
}

void Generated::update_domains_reset_2_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 2, 1, value);
	update_constraint_reset(domain_sizes, constraints, 2, 2, value);
	update_constraint_reset(domain_sizes, constraints, 2, 3, value);
	update_constraint_reset(domain_sizes, constraints, 2, 5, value);
	update_constraint_reset(domain_sizes, constraints, 2, 6, value);
	update_constraint_reset(domain_sizes, constraints, 2, 7, value);
	update_constraint_reset(domain_sizes, constraints, 2, 9, value);
	update_constraint_reset(domain_sizes, constraints, 2, 10, value);
	update_constraint_reset(domain_sizes, constraints, 2, 11, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);
}

bool Generated::update_domains_set_3_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 3, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 0, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 0, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 14, value);

	return valid;
}

void Generated::update_domains_reset_3_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 3, 1, value);
	update_constraint_reset(domain_sizes, constraints, 3, 2, value);
	update_constraint_reset(domain_sizes, constraints, 3, 3, value);
	update_constraint_reset(domain_sizes, constraints, 3, 5, value);
	update_constraint_reset(domain_sizes, constraints, 3, 6, value);
	update_constraint_reset(domain_sizes, constraints, 3, 7, value);
	update_constraint_reset(domain_sizes, constraints, 3, 9, value);
	update_constraint_reset(domain_sizes, constraints, 3, 10, value);
	update_constraint_reset(domain_sizes, constraints, 3, 11, value);
	update_constraint_reset(domain_sizes, constraints, 3, 13, value);
	update_constraint_reset(domain_sizes, constraints, 3, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 0, 13, value);
	update_constraint_reset(domain_sizes, constraints, 1, 13, value);
	update_constraint_reset(domain_sizes, constraints, 2, 13, value);
	update_constraint_reset(domain_sizes, constraints, 0, 14, value);
	update_constraint_reset(domain_sizes, constraints, 1, 14, value);
	update_constraint_reset(domain_sizes, constraints, 2, 14, value);
}

bool Generated::update_domains_set_4_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 4, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);

	return valid;
}

void Generated::update_domains_reset_4_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 4, 1, value);
	update_constraint_reset(domain_sizes, constraints, 4, 2, value);
	update_constraint_reset(domain_sizes, constraints, 4, 3, value);
	update_constraint_reset(domain_sizes, constraints, 4, 5, value);
	update_constraint_reset(domain_sizes, constraints, 4, 6, value);
	update_constraint_reset(domain_sizes, constraints, 4, 7, value);
	update_constraint_reset(domain_sizes, constraints, 4, 9, value);
	update_constraint_reset(domain_sizes, constraints, 4, 10, value);
	update_constraint_reset(domain_sizes, constraints, 4, 11, value);
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
}

bool Generated::update_domains_set_5_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 5, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);

	return valid;
}

void Generated::update_domains_reset_5_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 5, 1, value);
	update_constraint_reset(domain_sizes, constraints, 5, 2, value);
	update_constraint_reset(domain_sizes, constraints, 5, 3, value);
	update_constraint_reset(domain_sizes, constraints, 5, 5, value);
	update_constraint_reset(domain_sizes, constraints, 5, 6, value);
	update_constraint_reset(domain_sizes, constraints, 5, 7, value);
	update_constraint_reset(domain_sizes, constraints, 5, 9, value);
	update_constraint_reset(domain_sizes, constraints, 5, 10, value);
	update_constraint_reset(domain_sizes, constraints, 5, 11, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
}

bool Generated::update_domains_set_6_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 6, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);

	return valid;
}

void Generated::update_domains_reset_6_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 6, 1, value);
	update_constraint_reset(domain_sizes, constraints, 6, 2, value);
	update_constraint_reset(domain_sizes, constraints, 6, 3, value);
	update_constraint_reset(domain_sizes, constraints, 6, 5, value);
	update_constraint_reset(domain_sizes, constraints, 6, 6, value);
	update_constraint_reset(domain_sizes, constraints, 6, 7, value);
	update_constraint_reset(domain_sizes, constraints, 6, 9, value);
	update_constraint_reset(domain_sizes, constraints, 6, 10, value);
	update_constraint_reset(domain_sizes, constraints, 6, 11, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);
}

bool Generated::update_domains_set_7_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 7, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 4, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 14, value);

	return valid;
}

void Generated::update_domains_reset_7_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 7, 1, value);
	update_constraint_reset(domain_sizes, constraints, 7, 2, value);
	update_constraint_reset(domain_sizes, constraints, 7, 3, value);
	update_constraint_reset(domain_sizes, constraints, 7, 5, value);
	update_constraint_reset(domain_sizes, constraints, 7, 6, value);
	update_constraint_reset(domain_sizes, constraints, 7, 7, value);
	update_constraint_reset(domain_sizes, constraints, 7, 9, value);
	update_constraint_reset(domain_sizes, constraints, 7, 10, value);
	update_constraint_reset(domain_sizes, constraints, 7, 11, value);
	update_constraint_reset(domain_sizes, constraints, 7, 13, value);
	update_constraint_reset(domain_sizes, constraints, 7, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 4, 13, value);
	update_constraint_reset(domain_sizes, constraints, 5, 13, value);
	update_constraint_reset(domain_sizes, constraints, 6, 13, value);
	update_constraint_reset(domain_sizes, constraints, 4, 14, value);
	update_constraint_reset(domain_sizes, constraints, 5, 14, value);
	update_constraint_reset(domain_sizes, constraints, 6, 14, value);
}

bool Generated::update_domains_set_8_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 8, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);

	return valid;
}

void Generated::update_domains_reset_8_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 8, 1, value);
	update_constraint_reset(domain_sizes, constraints, 8, 2, value);
	update_constraint_reset(domain_sizes, constraints, 8, 3, value);
	update_constraint_reset(domain_sizes, constraints, 8, 5, value);
	update_constraint_reset(domain_sizes, constraints, 8, 6, value);
	update_constraint_reset(domain_sizes, constraints, 8, 7, value);
	update_constraint_reset(domain_sizes, constraints, 8, 9, value);
	update_constraint_reset(domain_sizes, constraints, 8, 10, value);
	update_constraint_reset(domain_sizes, constraints, 8, 11, value);
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
}

bool Generated::update_domains_set_9_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 9, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);

	return valid;
}

void Generated::update_domains_reset_9_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 9, 1, value);
	update_constraint_reset(domain_sizes, constraints, 9, 2, value);
	update_constraint_reset(domain_sizes, constraints, 9, 3, value);
	update_constraint_reset(domain_sizes, constraints, 9, 5, value);
	update_constraint_reset(domain_sizes, constraints, 9, 6, value);
	update_constraint_reset(domain_sizes, constraints, 9, 7, value);
	update_constraint_reset(domain_sizes, constraints, 9, 9, value);
	update_constraint_reset(domain_sizes, constraints, 9, 10, value);
	update_constraint_reset(domain_sizes, constraints, 9, 11, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
}

bool Generated::update_domains_set_10_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 10, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);

	return valid;
}

void Generated::update_domains_reset_10_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 10, 1, value);
	update_constraint_reset(domain_sizes, constraints, 10, 2, value);
	update_constraint_reset(domain_sizes, constraints, 10, 3, value);
	update_constraint_reset(domain_sizes, constraints, 10, 5, value);
	update_constraint_reset(domain_sizes, constraints, 10, 6, value);
	update_constraint_reset(domain_sizes, constraints, 10, 7, value);
	update_constraint_reset(domain_sizes, constraints, 10, 9, value);
	update_constraint_reset(domain_sizes, constraints, 10, 10, value);
	update_constraint_reset(domain_sizes, constraints, 10, 11, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);
}

bool Generated::update_domains_set_11_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 11, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 8, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 14, value);

	return valid;
}

void Generated::update_domains_reset_11_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 11, 1, value);
	update_constraint_reset(domain_sizes, constraints, 11, 2, value);
	update_constraint_reset(domain_sizes, constraints, 11, 3, value);
	update_constraint_reset(domain_sizes, constraints, 11, 5, value);
	update_constraint_reset(domain_sizes, constraints, 11, 6, value);
	update_constraint_reset(domain_sizes, constraints, 11, 7, value);
	update_constraint_reset(domain_sizes, constraints, 11, 9, value);
	update_constraint_reset(domain_sizes, constraints, 11, 10, value);
	update_constraint_reset(domain_sizes, constraints, 11, 11, value);
	update_constraint_reset(domain_sizes, constraints, 11, 13, value);
	update_constraint_reset(domain_sizes, constraints, 11, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 8, 13, value);
	update_constraint_reset(domain_sizes, constraints, 9, 13, value);
	update_constraint_reset(domain_sizes, constraints, 10, 13, value);
	update_constraint_reset(domain_sizes, constraints, 8, 14, value);
	update_constraint_reset(domain_sizes, constraints, 9, 14, value);
	update_constraint_reset(domain_sizes, constraints, 10, 14, value);
}

bool Generated::update_domains_set_12_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 12, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	return valid;
}

void Generated::update_domains_reset_12_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 12, 1, value);
	update_constraint_reset(domain_sizes, constraints, 12, 2, value);
	update_constraint_reset(domain_sizes, constraints, 12, 3, value);
	update_constraint_reset(domain_sizes, constraints, 12, 5, value);
	update_constraint_reset(domain_sizes, constraints, 12, 6, value);
	update_constraint_reset(domain_sizes, constraints, 12, 7, value);
	update_constraint_reset(domain_sizes, constraints, 12, 9, value);
	update_constraint_reset(domain_sizes, constraints, 12, 10, value);
	update_constraint_reset(domain_sizes, constraints, 12, 11, value);
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
}

bool Generated::update_domains_set_13_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 13, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	return valid;
}

void Generated::update_domains_reset_13_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 13, 1, value);
	update_constraint_reset(domain_sizes, constraints, 13, 2, value);
	update_constraint_reset(domain_sizes, constraints, 13, 3, value);
	update_constraint_reset(domain_sizes, constraints, 13, 5, value);
	update_constraint_reset(domain_sizes, constraints, 13, 6, value);
	update_constraint_reset(domain_sizes, constraints, 13, 7, value);
	update_constraint_reset(domain_sizes, constraints, 13, 9, value);
	update_constraint_reset(domain_sizes, constraints, 13, 10, value);
	update_constraint_reset(domain_sizes, constraints, 13, 11, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
}

bool Generated::update_domains_set_14_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 14, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	return valid;
}

void Generated::update_domains_reset_14_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 15, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 14, 1, value);
	update_constraint_reset(domain_sizes, constraints, 14, 2, value);
	update_constraint_reset(domain_sizes, constraints, 14, 3, value);
	update_constraint_reset(domain_sizes, constraints, 14, 5, value);
	update_constraint_reset(domain_sizes, constraints, 14, 6, value);
	update_constraint_reset(domain_sizes, constraints, 14, 7, value);
	update_constraint_reset(domain_sizes, constraints, 14, 9, value);
	update_constraint_reset(domain_sizes, constraints, 14, 10, value);
	update_constraint_reset(domain_sizes, constraints, 14, 11, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);
}

bool Generated::update_domains_set_15_15(int domain_sizes[], int constraints[], int value) {
	bool valid = true;

	// Update current row
	valid &= update_constraint_set(domain_sizes, constraints, 0, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 1, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 2, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 3, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 4, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 5, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 6, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 7, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 8, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 9, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 10, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 11, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 15, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 15, value);

	// Update current column
	valid &= update_constraint_set(domain_sizes, constraints, 15, 1, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 2, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 3, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 5, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 6, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 7, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 9, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 10, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 11, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 15, 14, value);

	// Update current block
	valid &= update_constraint_set(domain_sizes, constraints, 12, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 13, value);
	valid &= update_constraint_set(domain_sizes, constraints, 12, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 13, 14, value);
	valid &= update_constraint_set(domain_sizes, constraints, 14, 14, value);

	return valid;
}

void Generated::update_domains_reset_15_15(int domain_sizes[], int constraints[], int value) {
	// Update current row
	update_constraint_reset(domain_sizes, constraints, 0, 15, value);
	update_constraint_reset(domain_sizes, constraints, 1, 15, value);
	update_constraint_reset(domain_sizes, constraints, 2, 15, value);
	update_constraint_reset(domain_sizes, constraints, 3, 15, value);
	update_constraint_reset(domain_sizes, constraints, 4, 15, value);
	update_constraint_reset(domain_sizes, constraints, 5, 15, value);
	update_constraint_reset(domain_sizes, constraints, 6, 15, value);
	update_constraint_reset(domain_sizes, constraints, 7, 15, value);
	update_constraint_reset(domain_sizes, constraints, 8, 15, value);
	update_constraint_reset(domain_sizes, constraints, 9, 15, value);
	update_constraint_reset(domain_sizes, constraints, 10, 15, value);
	update_constraint_reset(domain_sizes, constraints, 11, 15, value);
	update_constraint_reset(domain_sizes, constraints, 12, 15, value);
	update_constraint_reset(domain_sizes, constraints, 13, 15, value);
	update_constraint_reset(domain_sizes, constraints, 14, 15, value);

	// Update current column
	update_constraint_reset(domain_sizes, constraints, 15, 1, value);
	update_constraint_reset(domain_sizes, constraints, 15, 2, value);
	update_constraint_reset(domain_sizes, constraints, 15, 3, value);
	update_constraint_reset(domain_sizes, constraints, 15, 5, value);
	update_constraint_reset(domain_sizes, constraints, 15, 6, value);
	update_constraint_reset(domain_sizes, constraints, 15, 7, value);
	update_constraint_reset(domain_sizes, constraints, 15, 9, value);
	update_constraint_reset(domain_sizes, constraints, 15, 10, value);
	update_constraint_reset(domain_sizes, constraints, 15, 11, value);
	update_constraint_reset(domain_sizes, constraints, 15, 13, value);
	update_constraint_reset(domain_sizes, constraints, 15, 14, value);

	// Update current block
	update_constraint_reset(domain_sizes, constraints, 12, 13, value);
	update_constraint_reset(domain_sizes, constraints, 13, 13, value);
	update_constraint_reset(domain_sizes, constraints, 14, 13, value);
	update_constraint_reset(domain_sizes, constraints, 12, 14, value);
	update_constraint_reset(domain_sizes, constraints, 13, 14, value);
	update_constraint_reset(domain_sizes, constraints, 14, 14, value);
}

